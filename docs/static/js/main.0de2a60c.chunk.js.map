{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","axios","get","resp","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAgB5C,OAEI,sBACAC,SAXe,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAe,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACpCN,EAAc,MAMd,SAII,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,yCCPlBG,EAAO,uCAAC,WAAOC,GAAP,qBAAAC,EAAA,6DAEPC,EAFO,iDAEuCF,EAFvC,+DAGMG,IAAMC,IAAIF,GAHhB,cAGPG,EAHO,OAMPC,EAAKD,EAAKC,KAAKA,KAEfC,EAAKD,EAAKE,KAAI,SAACC,GACjB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAIO,EAAIG,OAAOC,iBAAiBX,QAZ3B,kBAiBJK,GAjBI,2CAAD,sDCAPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAIzB,OAEI,sBAAKM,UAAU,0CAAf,UACI,qBAAKC,IAAKP,EAAIP,IAAKe,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCLPO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACnB,IAOKoB,EDlBcK,CAAazB,GAA5BmB,EAL4B,EAK5BA,QAAQb,EALoB,EAKpBA,KAGf,OACI,qCACA,oBAAIS,UAAU,oCAAd,SAAmDf,IAClDmB,GAAU,yCACX,qBAAKJ,UAAU,YAAf,SAEST,EAAKE,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,CAEAA,IAAKA,GADAA,EAAIC,aESdgB,EA1BM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAMvB,OACI,qCAEE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI0C,EAAWnB,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCfvB4B,IAASC,OAEP,cAAC,EAAD,IAGAC,SAASC,eAAe,W","file":"static/js/main.0de2a60c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n   \r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){    \r\n        setCategories( cats=>[inputValue,...cats]);\r\n        setInputValue(\"\");\r\n        }\r\n    }\r\n   \r\n    return (\r\n        \r\n        <form\r\n        onSubmit={handleSubmit}\r\n        >\r\n            \r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n \r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const getGifs=async (category)=>{\r\n\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=lNbvVEkLDn4j4WVU0MKNxvGBHBgokeLS`; \r\n        const resp = await axios.get(url);\r\n        //const {data}=resp.data;\r\n        // o sino tmb puedo escribirlo asi\r\n        const data=resp.data.data;\r\n\r\n        const gifs=data.map((img)=>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images.downsized_medium.url\r\n\r\n            }\r\n        })\r\n      \r\n        return ( gifs)\r\n        \r\n        \r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    \r\n   \r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__bounce \">\r\n            <img src={img.url} alt={img.title} />\r\n            <p>{img.title}</p>           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n\r\n  \r\n    const {loading,data}= useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__wobble\">{category}</h3>\r\n        {loading &&<p>cargando</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {data.map((img)=>(\r\n                    <GifGridItem\r\n                    key={img.id}\r\n                    img={img} />\r\n                ))\r\n                }               \r\n            \r\n        \r\n     \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n \r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs=>{\r\n         \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });      \r\n            })\r\n    },[category] )\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    return (state);\r\n    \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n          \r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={setCategories} />\r\n          <hr />\r\n          \r\n          <ol>\r\n              {\r\n              categories.map(category=>(\r\n                <GifGrid \r\n                  key={category}\r\n                  category={category}/>))\r\n            \r\n              }\r\n          </ol>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  \n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}